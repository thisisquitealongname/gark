<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAoAAAAHgCAMAAAACDyzWAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAMAUExURQAAAAAAqgCqAACqqqoAAKoAqqpVAKqqqlVVVVVV/1X/VVX///9VVf9V////Vf///wAA
        ABQUFCAgICwsLDg4OEVFRVFRUWFhYXFxcYKCgpKSkqKiora2tsvLy+Pj4////wAA/0EA/30A/74A//8A
        //8Avv8Aff8AQf8AAP9BAP99AP++AP//AL7/AH3/AEH/AAD/AAD/QQD/fQD/vgD//wC+/wB9/wBB/319
        /559/759/999//99//993/99vv99nv99ff+eff++ff/fff//fd//fb7/fZ7/fX3/fX3/nn3/vn3/333/
        /33f/32+/32e/7a2/8e2/9u2/+u2//+2//+26/+22/+2x/+2tv/Htv/btv/rtv//tuv/ttv/tsf/trb/
        trb/x7b/27b/67b//7br/7bb/7bH/wAAcRwAcTgAcVUAcXEAcXEAVXEAOHEAHHEAAHEcAHE4AHFVAHFx
        AFVxADhxABxxAABxAABxHABxOABxVQBxcQBVcQA4cQAccTg4cUU4cVU4cWE4cXE4cXE4YXE4VXE4RXE4
        OHFFOHFVOHFhOHFxOGFxOFVxOEVxODhxODhxRThxVThxYThxcThhcThVcThFcVFRcVlRcWFRcWlRcXFR
        cXFRaXFRYXFRWXFRUXFZUXFhUXFpUXFxUWlxUWFxUVlxUVFxUVFxWVFxYVFxaVFxcVFpcVFhcVFZcQAA
        QRAAQSAAQTAAQUEAQUEAMEEAIEEAEEEAAEEQAEEgAEEwAEFBADBBACBBABBBAABBAABBEABBIABBMABB
        QQAwQQAgQQAQQSAgQSggQTAgQTggQUEgQUEgOEEgMEEgKEEgIEEoIEEwIEE4IEFBIDhBIDBBIChBICBB
        ICBBKCBBMCBBOCBBQSA4QSAwQSAoQSwsQTAsQTQsQTwsQUEsQUEsPEEsNEEsMEEsLEEwLEE0LEE8LEFB
        LDxBLDRBLDBBLCxBLCxBMCxBNCxBPCxBQSw8QSw0QSwwQQAAAAAAAAAAAAAAAAAAAAAAAAAAAP///x+A
        N9kAABoLSURBVHhe7Z1brty4DkV7CJlBAwEauPMf4U3FcfySRFKiRMm1zkejc4p6bS5vSZbL55+f/KBA
        oAL/BLZN0yjwEwCBIFQBAAyVn8YBEAZCFQDAUPlpHABhIFQBAAyVn8YBEAZCFQDAUPlpHABhIFQBAAyV
        n8YBEAZCFQDAUPlpHAAHMPDjx4BGFm0CAAckDgDzIgNgdwB//Pnp3tCSDQBg97QBYEliABwA4KeJDcPu
        jS3XAAB2T9mGHQCmhQbAQQBuzYDhXW4ABMDuCrAGDJX4ufJjLXgkBAfsDicA4oDdISs1MNbv9ps+563P
        9XehYjwaxwG75wMAccDukOUbGIXf0+VS9x1H9UYvOA6o16oqclTKAbAqPe8v5AGgpo7UVmeF7Q8O2Pka
        0MAjdUFTBwBKKn7p5xp4JGk0daRicEBJ2S/4XAOPJIOmDgCUVPzSzzXwSNJo6tABKLU0/nPWgJ0118Aj
        dUFTBwBKKn7p5xp4JGnSG4zrfT4AlFT80s8BsJx4puDOF0YOwPPvr///fIR///yI2/4vV8c+JA/4O8vD
        K3p7CwyAOGBvxor12wBMf28k5Xdb5N0Tr13BAUNTP0fjAIgDhpJ4PCRw/r/0+q0Ea3rPe3bAp3vigKGp
        n6NxAMQBQ0m0TMFlBzwPI78vPvsgDhia+jkaB0AcMJREHwBzO970Lvjpj6ESFBvnRnTn3AAgDtgZsXL1
        +XXY073KsKbcTroPOP8qEAfsjCcA4oCdEat1wP1NMWUXO5/55va+55j7Xnn2d3LhgJ3xLE2C98cOpPUi
        AHZO1hurt6zCegA4u6Y4YOcMASBrwM6I1a8BnyVLT8Mc58fHVCztgkOHrmocB1TJVB9kccBtW5LCcvvd
        fQ0oHbvZ2q4fY0tJAGxRT1HWDkH+peZn57u/a7UErqKbYSEA2Fl6AGQN2Bmxmau3458bTeqxMo+R44Ae
        Kk5bBwBOm5rv6NgVQPupyNX37pp54I0DvppEAHx1etcb3BXIf379lMYgOZzdUZ+t4YDrUdTQYwBsEI+i
        7QrcPa3kgXd/O5+6pM5i6nqHA9bptmgpAFw0cW/p9nNVl18F3jcwZw3On0krRW5Ev4Ueh3EAoIOIVFGv
        gBeA8pu5tH1kDahV6hVxAPiKNK46iPR9u/QqsLQC/Ixf+lyrEQ6oVeoFcQD4giSuOoTSqUXKA9MOt/32
        818ccFUSgvoNgEHC06ysgOSA960LDihrSoRBAQA0iPXtoW3nDjn1ngjKZx0+q0B2wYsRDYCLJext3QXA
        t2V0sfEA4GIJW727x7cytpH0AfDnz/sq8Pz0367h9bvIrAFXZ0vVfwBUyURQHwVG/u2P69PROGCfjC5W
        KwAulrC3dfe54uu1Brwrl/oGyPXlSawB30ZbYjwA+AVJnneIKbdrdcDPSi/1k3LAY9e7LwXSf7GuZXfO
        Sci8/CVvuQDgxAl7W9d6OKBeIxl1+bxYbg0HlDUKiwDAMOm/s+H/fv8cY48GMP+u1uNs5Pl/ttzhgDa9
        ukYDYFd5qTyvwIHeTA54uJv8Z7flFWN69DjgFNcFAE6Rhu/sxHXdd9ZAWgPe35Rv12+7I5gqp3O01Imx
        rRc4oE2vDtEA2EFUqtQpkIdvK5/6PlrrvnMvX34/qs4Bj9NhbfxdFxxQR0qnKAAEwE5oydVK8JUd0GH1
        dcv99dFXvaNtkfr4qzIAKJPSKQIAP8ICYCe8ytVq4Nt8JffU3dMB99/o9sb574DY/ezTMg4YAlJtowD4
        dytUKyHlahXQwrfvg8+Olv6mxrFjPj/BV+5fyQGtbnZ9KkY+QT73jCm4lqPqcgAIgNXwtBa0wfdsLe+A
        2zos94SexpVa9tXHE9N7n7UuigO2MmUqD4B3uQDQBFBLcCt817bPe95935rbMe971LIrHf6Zr+dYbd6V
        2Eo/nVBSDAAlhdw+B8CUlADoBlipIl/4dsfbHGc/ifA4N06dajx9M+2kufWnsBsfov/XNwKAOQRwwO4X
        hz98mwNe7/mVXuJx3t8+456rudRqU/Y3OYIpuDtsqQYAsCQ7DtgVyj7wpTyrtFKz3eF7riXvp8vpu4q2
        VvYxACAA3hQAwK5IjKt8jPvt46l1wNLe2abVcWfSUg4HtKhligVAjVwAqFHJHDMWvlT3zrvd0urM3wFt
        YgGgTS9lNAAqheKJaK1Qlrjz2w0s5fxic6e5qQ1G6q5fTU+0z79c68YBa7QWygCgXlQA1GulioyffD/d
        vDvgfievpwPWfS8EAFVY6YMAUK/VJxIAbXpNP/mWO/h8ZtpvF4wDuqJUV1n86g8A6zL3ilKz47etDstv
        QKjby27pqynLFOyIPgDaxQRAu2bJEnNsPqyD0T7trKsXB9Tp1CUKAJmCu4Clq3SFyTc1EhxQl9/powCQ
        TUgYpGtOvrl9a806bpe+piybkGZwARAAmyGqr2DVyRcHrM/5VCUB8EgHU/BwNNfGL3XjpAYipuDh4O0N
        AuBZ+hp42YRUw7vy5qPkWXqMzufKujdTP8UGQAC8KQCA1UiMLLj65Ju/cfz0tdxv7nrr0T1K4oCV1AKg
        zzEeAFYB+Ab86h4eKMmFA1bBVFMIAFOqAWANSxVl3oEfDliR+jmKAGA6DzjgAD7fcPdvPweWgcm/TzVV
        Vq6P+4DNiALgju9TSgBsxkuq4C2Tb/4uoPZoDQeUWOnyOQD6HOJxI7oKzzr8PpP286eqA46FNNNlKQYH
        dEyGtioAPJQCQC01bnE1+M27ZZEdsBwhl9cJz1GcTqdfUQCo3aCoJf0VCIAqtWqcrKaMqjPqoNJzLZpK
        JA/0cEEA1GTil/vZ/a+mjKoz6iAAVEs1d+CK8HkoKj/lvHlgixPigIpMAWBOJABU4NMaUoNfa5vrlJf/
        +mZ5LDigmGsALEkEgCJAbQHg16afVBoHFBQCQAmhts8BsKgf+LXhJZcGQACUKekYAYAFcfG/juT9qRoA
        AbA/ZYUWlgUw/ZSd9FuL1lb/iz96s4xullgAzGYCAEdAuhCAV3erE0fvUnb86nr07aUAMEMAAI65NBYA
        cHc+L0E0aGlizv2xxnuNZf16ADCZQytQ1vj1wfEawcQAejvfLpkMixxxld8a75W8N9QDgIksWoGyxr8B
        HK8xTAhgL+c7JCsBo98n6x3VK1lvrAcAb1kFwLGYTwXg5n39Bci3YW/dXqL/+FZqAQAv2bLjZC+xEh79
        +zoJgKO8r7xus8NkL9E/pWu1AICnfNlxspdYC4/+vQ0HcLT35T3QCtOY9Wp/BGJbAMC/+gNgBIphAPa/
        21eW846bHb+IdL2vTQD8k1MAjIE7AMCoVd9d4DNy4BeDX8jr2QAwKtkztjvUAWdB774Txv/i0ATAX9oD
        4KsBPL7LETfMdMsbeOAXmZcBDgiAkQmeve0BAM4sgf00w+qXM49+hr4BoPHxLwD0xfbrAbTJOS9+0SdL
        Nh2PaAA0KQeAJrkUwV8N4AcnC1KWWIX2XULsq9ou3VBXCoCGNSAAqrlSBwKgGsAV8NvyvpILAiAAqt2q
        R+AXA2g7B1nH/3YX7IGLf50AqHRAAPSH71Pj1wJ4AKVBSxPTJ0H1ta7RZwBU3YhZI5lXWNfo85cCaHsa
        eo1UPr1yhX4DoMIBV0hkaqpeod9fCeA1MVKapM/rV2n9S87fdwAUHXD+JOZBnr/vXwjgMymlNM2fwrKP
        zt5/APx9dLWyhwBg/6WMYwsp2PIAzu4fGmHmHsPXOSAAaqAdFwOAhSl4bu/QQzLzOAAQAPUkd4j8MgBz
        XpD+/czOYWNh3pEA4O9MAqANaL/oZgD/Lf74ddSjJttud17XsGsx71gAMOuA8yYNAP8oUHa//VO7XH1K
        lIG6f/om/PKLjD5KW2ptckAAtEgdGzvrBVUNoA6+eVxQSsDbHdD2DehxFwsA/tEaAMdBd26pCkCb+23R
        McPbW5X87+4PcnzseOpan3FUAJh0wBlTVQfdudSMo6oAsMb/ol1QI/0Ro4lux2F8DTOOCwD/cgCA4y+J
        iu8F1/tf3EpQd+W/H8AZd8JmBwTACJ/walN3KXq1pqnHCGAbfjEeqBd9i9THawSeK2a+sQHgiRAAHH+5
        DAdwtAtarvlPrCV+fLraW5xtfAB4c8DZEtSO3LWG2cYXAuC4cxGb3DigN+5yfQCIA8qUdIwwAdi+Bz7X
        0HFUyeM1TXs2x9TUOF/MXGMEwAshcyWnD7xzjTEQwN7nw3ahV3q7fD2cdl3q25JLAuBlDThXcuT01UTM
        NUYDgL4rwKO2GhE1ZexC44AaXX1jABAH9CXKWNsEAPa5K1jjfx/t7OWMik8QPtMYAfAvEO8/Cd6HCoCP
        5aS3Ldgl3kvYS3r3vX99M41xCgf0n4TtEgNgf/BTLagB7LUH7vHN4Xr8WAWOxhAAfyt+RtaO7+iktbc3
        zxhfCGCNuADYDnVdDQCIA9aR41TKDcAfP1pXiT4javU/7gT65EFbCwA+bj7XIKyVe5a4ecb4MgAPYf+5
        /eRT/0yGR3ru7af+HYmjxxg9+g+AicM3j+QAoA7PQADvq0Zdh8tRGzqf5B8r0n+KY0zB1gbght5zRXwg
        6THS1jraxtja+lEeABN/J64tOQBowXMiANsP5P7775l8u/+17INz8F398BNlSVKf2LbLzKtPaiGkmyz2
        2zDPEq2DAkCLggD4uHNoke8Z+8Evt/LK1ZxLQk1y9pVfqhfWfrUpoStdM0ZdzZaoFzkgAFoS37LQsLVT
        jlYCKE3A//57nlB/3H720tdJ13cKTuO3t5xedeU9wOoOx75X539bv2LXgtYxemJn3gUDoHAd/73xAoA2
        UCsd8Ole+28+5pfDVXLA+n3w52oup/7pNiUHsLnD9a6jfLGeIyL3w7ZR2sDSRgNgUilbagBQi9szzhnA
        kv9d14n3f7W8J0H2v23FdR6+hJj0+WkVczl1sfnfs1/1qbSX1I/RXre2BABmlNInp8X/ANAdwJID9FoD
        6hzw7IEyXnLEh9z7qbPd/+7OrHUOnzjdKH3aStcCgE0OCICtcLoCKB3H5e4Ptr0nZn8CRuM++zpQvvLl
        iM0BNa1KMXE7Yd0oWyErlQfARgeU4NJ8DoAi4ncZ7163/Tt/GrKVl9eA9juB+zWs86It1brrXhOla1WC
        EAABMKEAAIpYOARUTcG5c5C0Lx7Op3FAmwcekOi86OM1GrB0PqlrU/K/794HA2D2KpZBBcB2C5wQQL0H
        nhHRwWBxQNkrdW3igO674L5TMAC2+4q+Btnn9XXVRLo44AHk9Sw4tyZM7YnPPvHzpwZCu/99VlsWwaVY
        HLAGuWsZACxoCIDtgEk1OAP42fGe/fC6/tHtgvcy5a5f4di9aP/ubW7dhQPeVZUuMgmg1s8BEAdsZaip
        vAOAz5XecebbywHv1+3mgMe7B9IOaPM/+V7gG9aA8l6/iS+xMAAWJSpPUAAo8iUGVAJ4PfWV73Tpz4Kv
        u+F0/59Y7A64u+AIB/TCL/YkZFEHBECvR7Fin4mWlxmihTUGVDngea8rPQOYd0e5pNb/dhjKe2DbKcjW
        dmkKTjugtA9P6RH3NIw0xka6FMUBsHoNCIAKvsSQSgC3p/vK34GTVoZ1DpjzpA8O0jeDa+55ldp7jlDa
        h+fWpmKeOgbUqOLXHQAUtARAP9hSNTUAKDmc9Hn+xGQrmepu/mqV3K9mBVhaIZXegSp58V2Z2DVg7D4Y
        AB0d8NiA2G7RAKDospKb1XwurQF9HbB2v6efgq+vJbcoAoAAmFUAAEU4mgICp2DJI57jkg7GchPf9mas
        2t1eutyzLRywhkQAFFUDQFGihoCFAJQdLHdrWD7VKCmoA/Dsf+yC9UQCoKgVAIoSNQQsA6Dsf+nHA/Rv
        g8mpqANwc72ak+Dop2HqV8cN3P0tCoCiigAoStQQMC2A1zFp/O9T4r4KPO6waWvQ7r3Lu2Bph3/9nPuA
        IsE2QT2iAVBMiltA/cXZ3oVJHbAOv9LfyawXWT8F6/5SXOoZmvZEttRQr01Lq1tZABQ1BEBRooaAKQGs
        9b9tFXh8R/iop+Ua1wK47YFrlh+sAUWCa2StLwOAYkJcA1ouz9aOTOeA9wHViLOtxc411dSyl9c7YO0l
        F+2AkXcCAVC8hAFQlKghYDIAPfwvpUaLA+b8oW69N9+34j56tenTwN9su2AAbElmfVkANH8HxCJ2q7y9
        J2HWgGI2a5fXlnL+U2d5GyEO+m8AAOq1skZOsgZMd7vVufoC6PdyDhxQxNbiZDWxACimoGuA16Vu7+QU
        DpjrtpcsXvU8++mzE8YBRXBrXE1fBgDFBHQO6HeJSh0PdsBS97xE8aon1VcPB4z3vy++DwiA8Q/kf+2N
        aMmcvZzLq550f9s9EAeUSPj1uX49p4+UmvUCx6seAJQyVvN50BpQ7qofNn419UEQB5RpcHdAuUk/bPxq
        AkA5b9YIpQN6TcL67nlh41VPqect68AZ/G+BXTAAAqDePCyRagdsR9DSLT/f8qupB4I+/vfjh0XbVOwY
        lZJ3UvVd1+9v05H6ljynhDHS1k7CAGhwQAtArbF+2PjVVB6THcH791asmqV9r9YNR+l0HyUAWvOeiQfA
        OiGnBNDvavSrSZbX8q3gVveTe2ONGKnUuW8AaM1UNh4Aa6QEwBrVihBK7wicz/0+w8EBT0n1E8OvJh2n
        1xf1pu8GACBTsI6mxqjrW/OPfzVW26n46Et1HwZTcKeEbq9JSv10a7CpYgD8K5+fFH41NeW2U+HaO37p
        7kRpNaED+knhV1MnhpqqBcAm+fKF/bDxq6nTUKur9YWPXfAlEX7Y+NVUTUqnggDYSVjf+1HvBdBf/iit
        plsDegrhWZd/yueqMUqrFwMYJel4sLYJuW1ajlILAMfz4t4iADpK6ncl+tXkOLxpq4pSCwecFomxHQPA
        33p7yuBZ11gY6lpjDVinW6d7gL4wOwytexUA6CCxn2v51eQwrCFVtG1FovSabA3oJ4NfTUPocWgEAJtF
        9ITGs67mgQ2p4DkFWyblKL2mckBPETzrGsJPcyMA2CyhJzSedTUPbEAFFrdLdSdKLxxwABwjmgBAB5U9
        r0LPuhyGNrgKO45ReuGAg9EY0xwAVunsdxX61ZReL/Wtv0q8WyErglEjeqkD9pXzv18/HpD0rAMAzep6
        JtWzrutAVoDPLP2vAv0UK/dmIgf0lMCzLgCsAVpbBgC1Sv12iX5gG7rRJTRqZABoSCcAGsRShk4KYOv1
        2Fr+qd6b4YtbAf56gYkS1AFhZ2haAWotD4ADEv67iZcC6HVNf3xv+xmVEI92rLdgvNSq6TsAFlUDwBqo
        LGWmBNDDb9rqWNH38mmXHbFNLQtw91gATKoHgC1QWcoC4E2t9VZ8lnTnYnHA37d5d3k85KitAwA9gNbX
        MaED1qJzH7StnndNunoAPpE2pWx1S9EA+EchAJRQ6fP5iwHUXtnfOemeccIBf6uxy+Anh64mANTp9CUO
        6CvGcSM5/399hF2nVl/FreOebgr2lQMAZSB8FZfbu0ZMBmCsGFbxZoyXTz2uvY5WHABnpKihTwDYIF70
        1djQ9WWLRms+kQNqb5ssm+spOw6Af9PykSJajikZUXbKOvlGn4Fsw5rIAQFQSVomDAAb9DueOcYDG2Q0
        Fp1B60kcEACN7LiEA+AfGa9CfPNjAS5cKSuZAb9J1oAAqGTGNQwAk/63a6w5RPvE/M/5xzXHE1c2B35T
        OGBaCgDsSy8A/tZ35DduD6sspXaL6pv8+NpnwS/cAQEwBkYAHOx+1zTLHvduD5wHv1AHHOl+AHhWAAB/
        +1/M5LO1Kjmc9Hlk31vbjlX+3vuwk5BYGSTApM9bIYgsH6s8AP5RoLzbfS+Ac+EXuAaMFgIAI134aPtL
        p+BdgNx++K0OGH3ZP6EHwORNZwAc5Y+BAM5xNaZReyeAcyh+RRsAv8gBAfDm63G3os8dSa0D3+eAc2g9
        0Rpw9KMI+TUNAI5a76XaCZuC987McWXeHe9tDjjj5LsRAIDJozkAHOWK4QDuU3GsE96n4XcBOK//TeCA
        ANjfawBQqXHkqyKvHvgeB4ydWeTETzEFnzckUVcrAMqw9IiYCsBtgFE+eCD4Fv+b3f2m2AU/ryoA9HIa
        AGxQMuL9CLvzre+AURexPeETTsHniXjsihAA7QC1lpgWwMiNydoOuMLEe2ALgIlLGABbfU1ffnoAIybk
        VQFcZ+W3kAMCoN5NAFCvVWXk+ZVFlVW8stiK6G2JWGQKvm5J1pW7F/3rKrIYgOcE4obH8qQX2P3rBcD+
        GnduYa3bLncxFgYw54Zjb153pqtY/boT73K7YCnN1/epStFv+RwAJ83k/fW+k3azulsR5+TVnRUKvmQK
        vo4SAHvh4l/vKwG8y/QGIN+65wdA/4u6S40A2EXWmEpX2bK8Fbpz1r/CActTcsxFoGkVADUqLR8z1wrx
        G6D7egecec8MgMs7WusAxjvit0GHAyoOuA4oWoGWywOgrNEXR9wd0f/fXyzuas8DRqTKH7jxk3yEbro2
        v/I2jE4aokYoAIAjVKaNrAIACByhCgBgqPw0DoAwEKoAAIbKT+MACAOhCgBgqPw0DoAwEKoAAIbKT+MA
        CAOhCgBgqPw0DoAwEKoAAIbKT+MACAOhCgBgqPw0DoAwEKoAAIbKT+MACAOhCgBgqPw0DoAwEKoAAIbK
        T+MACAOhCgBgqPw0DoAwEKoAAIbKT+MACAOhCgBgqPw0DoAwEKoAAIbKT+MACAOhCgBgqPw0DoAwEKoA
        AIbKT+MACAOhCgBgqPw0DoAwEKoAAIbKT+MACAOhCgBgqPw0DoAwEKoAAIbKT+MACAOhCgBgqPw0DoAw
        EKoAAIbKT+MACAOhCgBgqPw0DoAwEKoAAIbKT+MACAOhCgBgqPw0DoAwEKoAAIbKT+MACAOhCgBgqPw0
        DoAwEKoAAIbKT+P/BwUaaTy6J5FtAAAAAElFTkSuQmCC
</value>
  </data>
</root>